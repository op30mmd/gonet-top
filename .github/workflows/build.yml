name: Build gonet-top

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  build:
    runs-on: windows-latest

    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.3'

    - name: Build
      run: go build -o gonet-top.exe .

    - name: Run application and generate traffic
      run: |
        # Start the application in the background
        Start-Process -FilePath "./gonet-top.exe"

        # Give it a moment to initialize
        Start-Sleep -Seconds 3

        # Generate network traffic
        echo "Generating network traffic..."
        Invoke-WebRequest -Uri "https://www.google.com" -UseBasicParsing -ErrorAction SilentlyContinue

        # Let the app run for a few more seconds to process events
        Start-Sleep -Seconds 7

        # Stop the process
        Get-Process "gonet-top" -ErrorAction SilentlyContinue | Stop-Process -Force
      shell: powershell

    - name: Check for application output
      run: |
        # The application logs errors and TUI output to files.
        # We can check if these files were created and have content.
        echo "--- Application Log (app.log) ---"
        if (Test-Path app.log) { Get-Content app.log } else { echo "app.log not found." }
        echo "--- End Application Log ---"

        echo "--- TUI Log (tui.log) ---"
        if (Test-Path tui.log) { Get-Content tui.log } else { echo "tui.log not found." }
        echo "--- End TUI Log ---"

        # Fail the step if the TUI log is empty or doesn't exist, as it should always produce output.
        $tuiLog = Get-Content tui.log -ErrorAction SilentlyContinue
        if (-not $tuiLog) {
            echo "Error: TUI log is empty or missing. The application may have failed to start."
            exit 1
        }
      shell: powershell

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: gonet-top-windows-amd64
        path: gonet-top.exe

    - name: Create Release
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: gonet-top-${{ github.sha }}
        files: gonet-top.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
